version: '3.4'

services:
  orchestrator:
    profiles:
      - demo
    build:
      context: ../../fileserv
      dockerfile: ./Dockerfile
    environment:
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      MONGO_ROOT_USERNAME: root
      MONGO_ROOT_PASSWORD: example
    command: nodejs ./server.js

  mongo:
    profiles:
      - demo
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: mongod --port 27017
    volumes:
      - mongo-config:/DATA/CONFIGDB
      - mongo-db:/DATA/DB

  device-base:
    profiles:
      - ABSTRACT_BASE_HACK_DO_NOT_USE
    build:
      context: ../../wasmiot-supervisor
    environment:
      - DEVICE_TYPE=camera-thingi
    volumes:
      - ../device1/configs:/app/instance/configs
      - ../device1/modules:/app/instance/modules
      - ../device1/output:/app/instance/output

  primary-camera:
    extends: device-base
    profiles:
      - demo
    environment:
      - FLASK_APP=primary-camera-thingi
    ports:
      - 3001:5000
    # Needed for host camera access.
    volumes:
      - type: bind
    #    # Use this for testing on a single host with only one webcam attached,
    #    # mounting some fake webcam image for the device to use instead.
    #    #source: ./fakeWebcam.jpeg
    #    #target: /app/fakeWebcam.jpg
    # Use these when two cameras available on single host.
        source: /dev/video2
        target: /dev/video0
    privileged: true

  alternate-camera:
    extends: device-base
    profiles:
      - demo
    environment:
      - FLASK_APP=alternate-camera-thingi
    ports:
      - 3002:5000
    volumes:
      - type: bind
        source: /dev/video0
        target: /dev/video0
    privileged: true

volumes:
  mongo-config:
  mongo-db:

networks:
  default:
    name: trkks-thesis-demo-net
